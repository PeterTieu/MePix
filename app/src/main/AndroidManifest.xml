<?xml version="1.0" encoding="utf-8"?>

<!--MANIFEST-->

<manifest
    xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.petertieu.android.mepix">



<!--REQUEST PERMISSIONS-->
<!--NOTE: Permissons requested in Manifest are subject to filtering by Google Play Store.
          IOW, devices that do not meet the permissions declarations as per below will be filtered from the app-->

    <!--Request permission to use camera-->
    <uses-feature
        android:name="android.hardware.camera"
        android:required="false"/>


    <!--OpenGL ES version 2 for devices that do not support this, as it is used by Google Maps Android API-->
    <uses-feature
        android:glEsVersion="0x00020000"
        android:required="true" />


    <!--Access INTERNET -->
    <uses-permission android:name="android.permission.INTERNET"/>


    <!--WRITE/READ to/from external storage - part of the STORAGE permission group. These are 'dangerous' permissions and MUST also be requested at runtime-->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>


    <!--Access LOCATIONS - part of the LOCATION permission group. These are 'dangerous' permissions and MUST be requested at runtime-->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/> <!--Use cell towers and Wifi access points to track address (less accurate) -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>  <!--Use GPS radio to track location (most accurate) -->




<!--DECLARE APP COMPONENTS-->
    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher_mepix_logo"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_mepix_logo"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">


        <!--================================ DECLARE ACTIVITIES ====================================================================-->

        <!--PixListActivity (Main activity)-->
        <activity android:name=".PixListActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/> <!--ACTION: Main activity-->
                <category android:name="android.intent.category.LAUNCHER"/> <!--CATEGORY: Can be accessed via launcher screen-->
            </intent-filter>
        </activity>



        <!--PixViewPagerActivity (Spin-off from PixListActivity)-->
        <activity
            android:name=".PixViewPagerActivity"
            android:label="@string/pix_details"
            android:parentActivityName=".PixListActivity">
            <!--(Above) Adds the Up button to PixViewPagerActivity so when this is pressed, the user moves "up" the hierarchy to: PixListActivity-->
        </activity>



        <!--MapsActiivty (Spin-off from PixViewPagerActivity in one-pane mode / Spin-off from PixListActivity in two-pane mode)-->
        <activity
            android:name=".MapsActivity"
            android:label="@string/title_activity_maps"
            android:parentActivityName=".PixViewPagerActivity"
            android:screenOrientation="portrait">
            <!--(Above) Locks the activity to portrait orientation-->
        </activity>



        <!--IntentService - asynchronous activity that fetches location data-->
        <service
            android:name=".FetchAddressIntentService"
            android:exported="false"/>




        <!--================================ DECLARE FILE PROVIDER ====================================================================-->

        <!--File Provider-->
        <provider
            android:name="android.support.v4.content.FileProvider"
            android:authorities="com.petertieu.android.mepix.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true">
            <!--NOTE: FileProvider is a private storage in the MePix app. Director of FileProvider is adjacent to SQLiteDatabase database.
            FileProvider is used to store Pix pictures instead of the SQLiteDatabase database, as images are files (NOT variables). Also, they are too large for the SQLiteDatabase
            android:authorities="com.petertieu.android.mepix.fileprovider": address of FileProvider
            android:exported="false": only apps with permission could access FileProvider
            android:grantUriPermissions="true": Gives ability of app to grant other apps permission to write to FileProvider -->

            <!--Hook up files.xml to FileProvider-->
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/files"/>
        </provider>




        <!--================================ DECLARE FILE METADATA ====================================================================-->

        <!--API key for Google Maps-->
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="@string/google_maps_key"/>


        <!--Version of Google Play Services-->
        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

    </application>

</manifest>